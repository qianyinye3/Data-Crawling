#coding=utf8
# Create your views here.
#encoding=utf-8

from selenium import webdriver  
import time 
import re
from lxml import etree
from bs4 import BeautifulSoup
import bs4 as bs

from selenium.webdriver.common.keys import Keys
from pyvirtualdisplay import Display
display = Display(visible=0, size=(800, 800))  
display.start()
import pandas as pd
import datetime
from datetime import timedelta
import sys
reload(sys)
sys.setdefaultencoding('utf8')
sys.path.append("./")
#chrome_options = Options()
#chrome_options.add_argument('--headless')
driver = webdriver.Chrome("/home/hk01/chromedriver")
print "okay"
URL = ["https://www.hk01.com/channel/364/即時中國","https://www.hk01.com/channel/365/議事廳","https://www.hk01.com/channel/366/大國小事","https://www.hk01.com/channel/367/台灣新聞",
"https://www.hk01.com/channel/368/外媒視點","https://www.hk01.com/channel/369/行走中國","https://www.hk01.com/channel/428/中國經濟"]
for i in URL:
    driver.get(i) 
    driver.encoding = 'utf-8' 
    Size = []
    size = 100000
    for i in range(100):
        js="var q=document.documentElement.scrollTop=" + str(size)
        driver.execute_script(js) 
        time.sleep(5)
        size = size + 100000
        Size.append(size)
        html = driver.page_source
        soup1 = BeautifulSoup(html,'lxml')

    post_file = open('/home/hk01/text/china_post.txt','a')
    post_file.write("P_id\tPlatform\tTitle\tAuthor\tLast_modify_time\tPublish_time\tPublish_date\tDate_now\tTime_now\tView_number\tReply_number\tRating\tSectionBroad\tSectionNarrow\tURL\n")
    divs = soup1.find_all("div",class_="infinite-scroll-item")
    for i in divs:
        for elements in i.find_all("span")[1].find("a"):
            title = elements.text
            print(title)
        for elements in i.find_all("a"):
            link = elements.get('href')
            if "https://www.hk01.com" not in link:
                url = "https://www.hk01.com"+ link
                print(url) # url
                try:
                    platform = link.split("/")[1]
                    print(platform)
                except:
                    platform = ""
                try:
                    p_id = link.split("/")[2]
                    print(p_id)
                except:
                    p_id = ""
        #########################################################################        
        time_now = datetime.datetime.now().strftime("%Y-%m-%d %H:%m:%S")
        print(time_now)
        date_now = time_now.split(" ")[0]
        print(date_now)
        #########################################################################
        now = datetime.datetime.now()
        try:
            for news_time in i.find_all("div")[-4]:
                #print(news_time)
                if "小時前" in news_time:
                    news_time = int(news_time.split("小時前")[0])
                    publish_time = str(now + datetime.timedelta(hours = news_time)).split(".")[0]
                    publish_date = publish_time.split(" ")[0]
                    print(publish_time)
                    print(publish_date)
                elif"分鐘前" in news_time:
                    news_time = int(news_time.split("分鐘前")[0])
                    publish_time = str(now + datetime.timedelta(minutes = news_time)).split(".")[0]
                    publish_date = publish_time.split(" ")[0]
                    print(publish_time)
                    print(publish_date)
                else:
                    publish_time = ""
                    publish_date = news_time
                    print(publish_time)
                    print(publish_date)
        except:
            publish_time = ""
            publish_date = ""


        try:
            for sectionboard in i.find_all("span")[-1]:
                sectionboard = sectionboard.text
                print(sectionboard)
        except:
            sectionboard = ""
        sectionnarrow = "中國"
        post_list = []
        post_list.append(p_id)
        post_list.append("HK01")
        post_list.append(title.encode('utf-8'))
        post_list.append("")
        post_list.append(publish_date)
        post_list.append(publish_time)
        post_list.append("")
        post_list.append(date_now)
        post_list.append(time_now)
        post_list.append("")
        post_list.append("")
        post_list.append("")
        post_list.append(sectionboard)
        post_list.append(sectionnarrow)
        post_list.append(url.encode('utf-8'))


        post_file.write("\t".join(post_list).replace("\n","").encode('utf-8')+"\n")
    post_file.close()   
